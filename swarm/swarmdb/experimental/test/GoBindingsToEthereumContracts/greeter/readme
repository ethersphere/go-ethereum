
https://github.com/ethereum/go-ethereum/wiki/Native-DApps:-Go-bindings-to-Ethereum-contracts

JSON-RPC Endpoint   https://github.com/ethereum/wiki/wiki/JSON-RPC

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------


[root@puppeth-centos7-11091000-99xf greeter]# which solc
/var/www/vhosts/swarm.wolk.com/src/github.com/ethereum/go-ethereum/build/bin/solc


[root@puppeth-centos7-11091000-99xf greeter]# solc --version
solc, the solidity compiler commandline interface
Version: 0.4.13+commit.0fb4cb1a.Linux.g++

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
cd /var/www/vhosts/swarm.wolk.com/test/GoBindingsToEthereumContracts/greeter/

cp greeter.sol to ->
https://remix.ethereum.org
cp WEB3DEPLOY and paste in 
geth attach ipc:/var/www/vhosts/data/geth.ipc


> var _greeting = "Hello WLK" ;
undefined
> var browser_ballot_sol_greeterContract = web3.eth.contract([{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"greet","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_greeting","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]);
undefined
> var browser_ballot_sol_greeter = browser_ballot_sol_greeterContract.new(
...    _greeting,
...    {
......      from: web3.eth.accounts[0],
......      data: '0x6060604052341561000f57600080fd5b6040516103a93803806103a983398101604052808051820191905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060019080519060200190610081929190610088565b505061012d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100c957805160ff19168380011785556100f7565b828001600101855582156100f7579182015b828111156100f65782518255916020019190600101906100db565b5b5090506101049190610108565b5090565b61012a91905b8082111561012657600081600090555060010161010e565b5090565b90565b61026d8061013c6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b514610051578063cfae321714610066575b600080fd5b341561005c57600080fd5b6100646100f4565b005b341561007157600080fd5b610079610185565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100b957808201518184015260208101905061009e565b50505050905090810190601f1680156100e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610183576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b61018d61022d565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102235780601f106101f857610100808354040283529160200191610223565b820191906000526020600020905b81548152906001019060200180831161020657829003601f168201915b5050505050905090565b6020604051908101604052806000815250905600a165627a7a7230582009dd1528bf4f8b333b9172aa316074384d648983d8b1f8cc972a826b75dfd72d0029',
......      gas: '4700000'
......    }, function (e, contract){
......     console.log(e, contract);
......     if (typeof contract.address !== 'undefined') {
.........          console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
.........     }
......  })
null [object Object]
undefined
> null [object Object]
Contract mined! address: 0x4bb74b4f0a305da3f435175a92f1bedb0269ee60 transactionHash: 0x1a751f6a8dcf79124f0c585851ed99a35a3c0ec0f2b3f9342b1c13556a6ded04

> var greeterOutput = browser_ballot_sol_greeter.greet()
undefined
> greeterOutput
"Hello WLK"
>


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------


-new CLI
geth attach ipc:/var/www/vhosts/data/geth.ipc

var greeterABI = [{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"greet","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_greeting","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}];
var greeterTest = eth.contract(greeterABI).at("0x4bb74b4f0a305da3f435175a92f1bedb0269ee60");
 



> var greeterABI = [{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"greet","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_greeting","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}];
undefined
> var greeterTest = eth.contract(greeterABI).at("0x4bb74b4f0a305da3f435175a92f1bedb0269ee60");
undefined
> greeterTest
{
  abi: [{
      constant: false,
      inputs: [],
      name: "kill",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
  }, {
      constant: true,
      inputs: [],
      name: "greet",
      outputs: [{...}],
      payable: false,
      stateMutability: "view",
      type: "function"
  }, {
      inputs: [{...}],
      payable: false,
      stateMutability: "nonpayable",
      type: "constructor"
  }],
  address: "0x4bb74b4f0a305da3f435175a92f1bedb0269ee60",
  transactionHash: null,
  allEvents: function(),
  greet: function(),
  kill: function()
}
> var gOut = greeterTest.greet()
undefined
> gOut
"Hello WLK"
>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------


create greeter.abi
cp the abi to the file

-Generating the bindings
cd /var/www/vhosts/swarm.wolk.com/test/GoBindingsToEthereumContracts/greeter/
abigen --abi greeter.abi --pkg main --type greeter --out greeter.go
abigen --abi greeter.abi --pkg main --type greeter --out greeter2.go --bin token.bin



[root@puppeth-centos7-11091000-99xf greeter]# go run main.go greeter.go
Greet: Hello WLK





















